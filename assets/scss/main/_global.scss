//  01 global Style

html,
body {
    font-size: 21px;
    color: $bodyColor;
    font-family: $bodyFont;
    font-weight: 400;
    line-height: 1.6;
    overflow-x: hidden;
}
input,
textarea,
select {
    border: 0;
    background: transparent;
    transition: 0.4s;
    &:focus {
        outline: none;
    }
}
a {
    transition: 0.4s;
    text-decoration: none;
}
img {
    max-width: 100%;
}
h1,
h2,
h3,
h4,
h5,
h6 {
    font-family: $titleFont;
    color: $titleColor;
    line-height: 1;
}
h1 {
    font-weight: 400;
    font-size: 125px;
    line-height: 1;
}
h2 {
    font-weight: 400;
    font-size: 80px;
}
h3 {
    font-weight: 400;
    font-size: 65px;
}
h4 {
    font-weight: 400;
    font-size: 60px;
}
h5 {
    font-weight: 400;
    font-size: 45px;
}
h6 {
    font-weight: 400;
    font-size: 40px;
}
input:focus,
select:focus,
textarea:focus {
    outline: none !important;
    text-decoration: none !important;
    box-shadow: none !important;
}
::-moz-selection {
    background: $primaryColor;
    text-shadow: none;
    color: #ffffff;
}
::selection {
    background: $primaryColor;
    text-shadow: none;
    color: #ffffff;
    border: none;
}
.list-gap {
    margin: 0;
    padding: 0;
    list-style: none;
}
.section-heading {
    .sub-title {
        font-size: 18px;
        color: $primaryColor;
        display: block;
        margin-bottom: 20px;
        text-transform: uppercase;
    }
}
// active-color
.primary-color {
    color: $primaryColor;
}
.white-color {
    color: $whiteColor;
}
.p-z-idex {
    position: relative;
    z-index: 3 !important;
}

// Translate
@mixin transition($transition: 0.4s) {
    transition: $transition;
    -webkit-transition: $transition;
    -moz-transition: $transition;
}

@mixin transitionEase($transition: 1s) {
    transition: $transition all ease;
    -webkit-transition: $transition all ease;
    -moz-transition: $transition all ease;
}

@mixin transitionFade() {
    -webkit-transition: opacity 1700ms ease-in, -webkit-transform 8000ms ease;
    transition: opacity 1700ms ease-in, -webkit-transform 8000ms ease;
    transition: transform 8000ms ease, opacity 1700ms ease-in;
    transition: transform 8000ms ease, opacity 1700ms ease-in, -webkit-transform 8000ms ease;
}

// Border Style
@mixin borderStyle($width: 1px, $color: #333) {
    border: $width solid $color;
}
.priary-borer {
    @include borderStyle();
    @include transition($transition: 0.3s);
}

/*-- boxfin-scroll-top start --*/
.alacena-scroll-top {
    position: fixed;
    right: 30px;
    bottom: 25px;
    width: 45px;
    height: 45px;
    cursor: pointer;
    display: block;
    border-radius: 100%;
    box-shadow: inset 0 0 0 0.1rem rgba(128, 130, 134, 0.25);
    z-index: 9999;
    opacity: 0;
    visibility: hidden;
    transform: translateY(0.75rem);
    transition: all 0.2s linear, margin-right 0s;
}
.alacena-scroll-top.progress-done {
    visibility: visible;
    transform: translateY(0);
}
.alacena-scroll-top-icon {
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 18px;
    color: $primaryColor;
}
.alacena-scroll-top > svg path {
    fill: none;
}
.alacena-scroll-top > svg.progress-circle path {
    stroke: $primaryColor;
    stroke-width: 4;
    box-sizing: border-box;
    transition: all 200ms linear;
}

@media (min-width: 1px) {
    .alacena-scroll-top.progress-done {
        opacity: 1;
    }
}
/* @link https://utopia.fyi/type/calculator?c=320,20,1.2,1140,24,1.25,1,0,&s=0.75|0.5|0.25,1.5|2|3|4|6,s-l */
.splitting .char {
    transition: transform 0.5s cubic-bezier(0.3, 0, 0.3, 1), opacity 0.5s linear;
    transition-delay: calc(30ms * var(--char-index));
}
.splitting[data-scroll="out"] .char {
    opacity: 0.1;
    transform: translateY(0.25em);
}

.splitting-mark {
    display: none;
}

/* ---------------------------------- */
/* Recommended styles for Splitting */
.splitting .word,
.splitting .char {
    display: inline-block;
}

/* Psuedo-element chars */
.splitting .char {
    position: relative;
}

/**
 * Populate the psuedo elements with the character to allow for expanded effects
 * Set to `display: none` by default; just add `display: block` when you want
 * to use the psuedo elements
 */
.splitting .char::before,
.splitting .char::after {
    content: attr(data-char);
    position: absolute;
    top: 0;
    left: 0;
    visibility: hidden;
    transition: inherit;
    -webkit-user-select: none;
    -moz-user-select: none;
    user-select: none;
}

/* Expanded CSS Variables */
.splitting {
    /* The center word index */
    --word-center: calc((var(--word-total) - 1) / 2);
    /* The center character index */
    --char-center: calc((var(--char-total) - 1) / 2);
    /* The center character index */
    --line-center: calc((var(--line-total) - 1) / 2);
}

.splitting .word {
    /* Pecent (0-1) of the word's position */
    --word-percent: calc(var(--word-index) / var(--word-total));
    /* Pecent (0-1) of the line's position */
    --line-percent: calc(var(--line-index) / var(--line-total));
}

.splitting .char {
    /* Percent (0-1) of the char's position */
    --char-percent: calc(var(--char-index) / var(--char-total));
    /* Offset from center, positive & negative */
    --char-offset: calc(var(--char-index) - var(--char-center));
    /* Absolute distance from center, only positive */
    --distance: calc((var(--char-offset) * var(--char-offset)) / var(--char-center));
    /* Distance from center where -1 is the far left, 0 is center, 1 is far right */
    --distance-sine: calc(var(--char-offset) / var(--char-center));
    /* Distance from center where 1 is far left/far right, 0 is center */
    --distance-percent: calc((var(--distance) / var(--char-center)));
}
/*-- boxfin-scroll-top end --*/
